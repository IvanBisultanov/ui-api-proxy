/**
 * Booking
 * Resources and methods to manage guest journeys.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

import { FormBuilder, FormGroup }                              from '@angular/forms';
import { IBuildFormOptions, IApaleoPropertyMetaData }          from '../../types';
import { ResponseModel }                                       from '../../models';
import { getControl, adjustDefaultControls, prepareFormGroup } from '../../functions.model';

export interface StayOffersModel {
    /**
     * The property
     */
    property: models.EmbeddedPropertyModel;

    /**
     * The requested arrival date and time
     */
    arrivalRequested: Date;

    /**
     * The requested departure date and time
     */
    departureRequested: Date;

    /**
     * List of offered unit types with rates
     */
    offers: Array<models.OfferModel>;

}

export type StayOffersModelWithRawHttp = StayOffersModel & ResponseModel<StayOffersModel>;

export namespace StayOffersModel {
    export const $metaData = { 
        property: Object.freeze({ 
            isRequired: true,
            type: 'models.EmbeddedPropertyModel',
        } as IApaleoPropertyMetaData),
        arrivalRequested: Object.freeze({ 
            isRequired: true,
            type: 'Date',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
        departureRequested: Object.freeze({ 
            isRequired: true,
            type: 'Date',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
        offers: Object.freeze({ 
            isRequired: true,
            type: 'Array<models.OfferModel>',
            isListContainer: true,
        } as IApaleoPropertyMetaData),
    };

    export function $buildForm(fb: FormBuilder, options?: IBuildFormOptions<StayOffersModel>): FormGroup {
        const defaultControls = { 
            property: models.EmbeddedPropertyModel.$buildForm(fb),
            arrivalRequested: getControl($metaData.arrivalRequested, options, 'arrivalRequested'),
            departureRequested: getControl($metaData.departureRequested, options, 'departureRequested'),
        };
        const group = fb.group(adjustDefaultControls(defaultControls, options));
        prepareFormGroup(group, $metaData, options);

        return group;
    }
}

