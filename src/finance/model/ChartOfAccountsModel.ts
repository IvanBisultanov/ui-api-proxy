/**
 * Apaleo Finance API
 * Everything around the Folio, Invoices and Accounting.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

import { FormBuilder, FormGroup }                                               from '@angular/forms';
import { ResponseModel }                                                        from '../../models';
import { getControl, adjustDefaultControls, prepareFormGroup }                  from '../../functions.model';
import { BuildFormOptions, ApaleoPropertyMetaData, ApaleoEnumPropertyMetaData } from '../../types';

export interface ChartOfAccountsModel {
    /**
     * The predefined list of global accounts of a property's subledger
     */
    globalAccounts: Array<models.FinanceAccountModel>;

    /**
     * The predefined list of guest specific accounts of a property's subledger.
     */
    guestAccounts: Array<models.FinanceAccountModel>;

}

export type ChartOfAccountsModelWithRawHttp = ChartOfAccountsModel & ResponseModel<ChartOfAccountsModel>;

export namespace ChartOfAccountsModel {
    export const $metaData = { 
        globalAccounts: Object.freeze({ 
            isRequired: true,
            type: 'Array<models.FinanceAccountModel>',
            isListContainer: true,
        } as ApaleoPropertyMetaData),
        guestAccounts: Object.freeze({ 
            isRequired: true,
            type: 'Array<models.FinanceAccountModel>',
            isListContainer: true,
        } as ApaleoPropertyMetaData),
    };

    export function $buildForm(fb: FormBuilder, options?: BuildFormOptions<ChartOfAccountsModel>): FormGroup {
        const defaultControls = { 
        };
        const group = fb.group(adjustDefaultControls(defaultControls, options));
        prepareFormGroup(group, $metaData, options);

        return group;
    }
}

