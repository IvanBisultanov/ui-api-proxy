/**
 * Apaleo Rates API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

import { Validators, FormBuilder, ValidatorFn, FormGroup }          from '@angular/forms';
import { ValidatorsFactory, ControlFactory, Control }               from '../../types';
import { IApaleoAbstractControl, IApaleoControlMetaData, Optional } from '../../types';
import { ResponseModel }                                            from '../../models';

export interface RateplanModel {
    /**
     * The rateplan id
     */
    id?: string;

    /**
     * The code for the rateplan that can be shown in reports and table views
     */
    code?: string;

    /**
     * The name for the rateplan
     */
    name?: { [key: string]: string; };

    /**
     * The description for the rateplan
     */
    description?: { [key: string]: string; };

    /**
     * The default price for the rateplan
     */
    defaultPrice?: number;

    /**
     * The property to which the rateplan belongs to
     */
    property?: models.EmbeddedPropertyModel;

}

export type RateplanModelWithRawHttp = RateplanModel & ResponseModel<RateplanModel>;

export interface RateplanModel$Form<T> {
    id: T;
    code: T;
    name: T;
    description: T;
    defaultPrice: T;
    property: T;
}

export interface RateplanModel$ValidatorFactories extends RateplanModel$Form<ValidatorsFactory> {}
export interface RateplanModel$ControlFactories extends RateplanModel$Form<ControlFactory> {}
export interface RateplanModel$Control extends RateplanModel$Form<Control | FormGroup> {}
export interface RateplanModel$ControlMetaData extends RateplanModel$Form<IApaleoControlMetaData> {}

export namespace RateplanModel {
    export const $validators: RateplanModel$ValidatorFactories = {
        id: (() => [
            
            
            
        ]),
        code: (() => [
            
            
            
        ]),
        name: (() => [
            
            
            
        ]),
        description: (() => [
            
            
            
        ]),
        defaultPrice: (() => [
            
            
            
        ]),
        property: (() => [
            
            
            
        ]),
    };

    export const $controls: RateplanModel$ControlFactories = {
        id: (() => [null, Validators.compose($validators.id())]),
        code: (() => [null, Validators.compose($validators.code())]),
        name: (() => [null, Validators.compose($validators.name())]),
        description: (() => [null, Validators.compose($validators.description())]),
        defaultPrice: (() => [null, Validators.compose($validators.defaultPrice())]),
        property: (() => [null, Validators.compose($validators.property())]),
    };

    export const $metaData: RateplanModel$ControlMetaData = {
        id: {
            
            
            type: 'string',
            
        },
        code: {
            
            
            type: 'string',
            
        },
        name: {
            
            
            type: '{ [key: string]: string; }',
            
        },
        description: {
            
            
            type: '{ [key: string]: string; }',
            
        },
        defaultPrice: {
            
            
            type: 'number',
            
        },
        property: {
            
        },
    };

    export function $buildForm(fb: FormBuilder, specificControls?: Optional<RateplanModel$Control>, additionalControls?: { [name: string]: (Control | FormGroup) }) {
        const defaultControls = {
            id: $controls.id(),
            code: $controls.code(),
            name: $controls.name(),
            description: $controls.description(),
            defaultPrice: $controls.defaultPrice(),
            property: models.EmbeddedPropertyModel.$buildForm(fb),
        };

        const group = fb.group(Object.assign(defaultControls, specificControls, additionalControls));

    
        const idCtrl: IApaleoAbstractControl = <any>group.controls['id'];
        idCtrl.apaleoMetaData = $metaData.id;
    
    
        const codeCtrl: IApaleoAbstractControl = <any>group.controls['code'];
        codeCtrl.apaleoMetaData = $metaData.code;
    
    
        const nameCtrl: IApaleoAbstractControl = <any>group.controls['name'];
        nameCtrl.apaleoMetaData = $metaData.name;
    
    
        const descriptionCtrl: IApaleoAbstractControl = <any>group.controls['description'];
        descriptionCtrl.apaleoMetaData = $metaData.description;
    
    
        const defaultPriceCtrl: IApaleoAbstractControl = <any>group.controls['defaultPrice'];
        defaultPriceCtrl.apaleoMetaData = $metaData.defaultPrice;
    
    

        return group;
    }
}

