/**
 * Apaleo Rates API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

import { Validators, FormBuilder, ValidatorFn, FormGroup, AbstractControl }  from '@angular/forms';
import { IBuildFormOptions, IControlFactoryOptions, Control }                from '../../types';
import { IApaleoAbstractControl, IApaleoControlMetaData }                    from '../../types';
import { ResponseModel }                                                     from '../../models';
import { getControl, getControlOptions, adjustDefaultControls, setMetaData } from '../../functions';

export interface OfferModel {
    /**
     * The unit type for which the following offers apply
     */
    unitType?: models.EmbeddedUnitTypeModel;

    /**
     * The rate plan for this offer
     */
    rateplan?: models.EmbeddedRateplanModel;

    /**
     * The price for the whole stay
     */
    price?: number;

}

export type OfferModelWithRawHttp = OfferModel & ResponseModel<OfferModel>;

export namespace OfferModel {
    export const $validators = {
        unitType: (() => [
        ]),
        rateplan: (() => [
        ]),
        price: (() => [
        ]),
    };

    export const $controls = { 
        price: ((options?: IControlFactoryOptions<number>) => getControl($validators.price(), options)),
    };

    export const $metaData = { 
        price: { 
            type: 'number',
        } as IApaleoControlMetaData,
    };

    export function $buildForm(fb: FormBuilder, options?: IBuildFormOptions<OfferModel>) {
        const defaultControls = { 
            unitType: models.EmbeddedUnitTypeModel.$buildForm(fb),
            rateplan: models.EmbeddedRateplanModel.$buildForm(fb),
            price: $controls.price(getControlOptions(options, 'price')),
        };
        const group = fb.group(adjustDefaultControls(defaultControls, options)!);

        setMetaData(<any>group.controls.price, $metaData.price);

        return group;
    }
}

