/**
 * Apaleo Rates API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

import { Validators, FormBuilder, ValidatorFn, FormGroup, AbstractControl } from '@angular/forms';
import { IBuildFormOptions, IControlFactoryOptions, Control }               from '../../types';
import { IApaleoAbstractControl, IApaleoControlMetaData }                   from '../../types';
import { ResponseModel }                                                    from '../../models';
import { getControl, getControlOptions, adjustDefaultControls }             from '../../functions';

export interface OfferModel {
    /**
     * The unit type for which the following offers apply
     */
    unitTypeCode?: string;

    /**
     * The rate plan for this offer
     */
    rateplanCode?: string;

    /**
     * The price for the whole stay
     */
    price?: number;

}

export type OfferModelWithRawHttp = OfferModel & ResponseModel<OfferModel>;

export namespace OfferModel {
    export const $validators = {
        unitTypeCode: (() => [
        ]),
        rateplanCode: (() => [
        ]),
        price: (() => [
        ]),
    };

    export const $controls = { 
        unitTypeCode: ((options?: IControlFactoryOptions<string>) => getControl($validators.unitTypeCode(), options)),
        rateplanCode: ((options?: IControlFactoryOptions<string>) => getControl($validators.rateplanCode(), options)),
        price: ((options?: IControlFactoryOptions<number>) => getControl($validators.price(), options)),
    };

    export const $metaData = { 
        unitTypeCode: { 
            type: 'string',
        } as IApaleoControlMetaData,
        rateplanCode: { 
            type: 'string',
        } as IApaleoControlMetaData,
        price: { 
            type: 'number',
        } as IApaleoControlMetaData,
    };

    export function $buildForm(fb: FormBuilder, options?: IBuildFormOptions<OfferModel>) {
        const defaultControls = { 
            unitTypeCode: $controls.unitTypeCode(getControlOptions(options, 'unitTypeCode')),
            rateplanCode: $controls.rateplanCode(getControlOptions(options, 'rateplanCode')),
            price: $controls.price(getControlOptions(options, 'price')),
        };
        const group = fb.group(adjustDefaultControls(defaultControls, options)!);

        (<IApaleoAbstractControl><any>group.controls['unitTypeCode']).apaleoMetaData = $metaData.unitTypeCode;
        (<IApaleoAbstractControl><any>group.controls['rateplanCode']).apaleoMetaData = $metaData.rateplanCode;
        (<IApaleoAbstractControl><any>group.controls['price']).apaleoMetaData = $metaData.price;

        return group;
    }
}

