/**
 * Apaleo Rates API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

import { FormBuilder, FormGroup }                         from '@angular/forms';
import { IBuildFormOptions, IApaleoPropertyMetaData }     from '../../types';
import { ResponseModel }                                  from '../../models';
import { getControl, adjustDefaultControls, setMetaData } from '../../functions.model';

export interface OfferModel {
    /**
     * The unit type for which the following offers apply
     */
    unitType?: models.EmbeddedUnitTypeModel;

    /**
     * The number of available units for that offer
     */
    availableUnits?: number;

    /**
     * The rate plan for this offer
     */
    rateplan?: models.EmbeddedRateplanModel;

    /**
     * The price for the whole stay
     */
    price?: number;

}

export type OfferModelWithRawHttp = OfferModel & ResponseModel<OfferModel>;

export namespace OfferModel {
    export const $metaData = { 
        unitType: Object.freeze({ 
            type: 'models.EmbeddedUnitTypeModel',
        } as IApaleoPropertyMetaData),
        availableUnits: Object.freeze({ 
            type: 'number',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
        rateplan: Object.freeze({ 
            type: 'models.EmbeddedRateplanModel',
        } as IApaleoPropertyMetaData),
        price: Object.freeze({ 
            type: 'number',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
    };

    export function $buildForm(fb: FormBuilder, options?: IBuildFormOptions<OfferModel>): FormGroup {
        const defaultControls = { 
            unitType: models.EmbeddedUnitTypeModel.$buildForm(fb),
            availableUnits: getControl($metaData.availableUnits, options, 'availableUnits'),
            rateplan: models.EmbeddedRateplanModel.$buildForm(fb),
            price: getControl($metaData.price, options, 'price'),
        };
        const group = fb.group(adjustDefaultControls(defaultControls, options));
        setMetaData(group, $metaData);

        return group;
    }
}

