/**
 * Apaleo Rates API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

import { Validators, FormBuilder, ValidatorFn, FormGroup }                      from '@angular/forms';
import { ValidatorsFactory, ControlFactory, Control, IApaleoAbstractControl }   from '../../types';
import { ResponseModel }                                                        from '../../models';

export interface OfferModel {
    /**
     * The unit type for which the following offers apply
     */
    unitTypeCode?: string;

    /**
     * The rate plan for this offer
     */
    rateplanCode?: string;

    /**
     * The price for the whole stay
     */
    price?: number;

}

export type OfferModelWithRawHttp = OfferModel & ResponseModel<OfferModel>;

export interface OfferModel$Form<T> {
    unitTypeCode: T;
    rateplanCode: T;
    price: T;
}

export interface OfferModel$ValidatorFactories extends OfferModel$Form<ValidatorsFactory> {}
export interface OfferModel$ControlFactories extends OfferModel$Form<ControlFactory> {}

const $validators: OfferModel$ValidatorFactories = {
    unitTypeCode: (() => [
        
        
        
    ]),
    rateplanCode: (() => [
        
        
        
    ]),
    price: (() => [
        
        
        
    ]),
}

const $controls: OfferModel$ControlFactories = {
    unitTypeCode: (() => [null, Validators.compose($validators.unitTypeCode())]),
    rateplanCode: (() => [null, Validators.compose($validators.rateplanCode())]),
    price: (() => [null, Validators.compose($validators.price())]),
}

export const OfferModel = {
    $validators: $validators,
    $controls: $controls,
    $buildForm: ((fb: FormBuilder) => {
        const group = fb.group({
            unitTypeCode: $controls.unitTypeCode(),
            rateplanCode: $controls.rateplanCode(),
            price: $controls.price(),
        });

    
    
    

        return group;
    })
}

