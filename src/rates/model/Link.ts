/**
 * Apaleo Rates API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

import { Validators, FormBuilder, ValidatorFn, FormGroup }          from '@angular/forms';
import { ValidatorsFactory, ControlFactory, Control }               from '../../types';
import { IApaleoAbstractControl, IApaleoControlMetaData, Optional } from '../../types';
import { ResponseModel }                                            from '../../models';

export interface Link {
    rel?: Link.RelEnum;

    href?: string;

}
export namespace Link {
    export enum RelEnum {
        Self = <any> 'self'
    }
}

export type LinkWithRawHttp = Link & ResponseModel<Link>;

export interface Link$Form<T> {
    rel: T;
    href: T;
}

export interface Link$ValidatorFactories extends Link$Form<ValidatorsFactory> {}
export interface Link$ControlFactories extends Link$Form<ControlFactory> {}
export interface Link$Control extends Link$Form<Control | FormGroup> {}
export interface Link$ControlMetaData extends Link$Form<IApaleoControlMetaData> {}

export namespace Link {
    export const $validators: Link$ValidatorFactories = {
        rel: (() => [
            
            
            
        ]),
        href: (() => [
            
            
            
        ]),
    };

    export const $controls: Link$ControlFactories = {
        rel: (() => [null, Validators.compose($validators.rel())]),
        href: (() => [null, Validators.compose($validators.href())]),
    };

    export const $metaData: Link$ControlMetaData = {
        rel: {
            
            
            
            
        },
        href: {
            
            
            type: 'string',
            
        },
    };

    export function $buildForm(fb: FormBuilder, specificControls?: Optional<Link$Control>, additionalControls?: { [name: string]: (Control | FormGroup) }) {
        const defaultControls = {
            rel: $controls.rel(),
            href: $controls.href(),
        };

        const group = fb.group(Object.assign(defaultControls, specificControls, additionalControls));

    
        const relCtrl: IApaleoAbstractControl = <any>group.controls['rel'];
        relCtrl.apaleoMetaData = $metaData.rel;
    
    
        const hrefCtrl: IApaleoAbstractControl = <any>group.controls['href'];
        hrefCtrl.apaleoMetaData = $metaData.href;
    

        return group;
    }
}

