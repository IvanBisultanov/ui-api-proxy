/**
 * Apaleo Rates API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

import { FormBuilder, FormGroup }                         from '@angular/forms';
import { IBuildFormOptions, IApaleoPropertyMetaData }     from '../../types';
import { ResponseModel }                                  from '../../models';
import { getControl, adjustDefaultControls, setMetaData } from '../../functions.model';

export interface StayOffersModel {
    /**
     * The property
     */
    property?: models.EmbeddedPropertyModel;

    /**
     * The arrival date
     */
    arrival?: Date;

    /**
     * The departure date
     */
    departure?: Date;

    /**
     * List of offered unit types with rates
     */
    offers?: Array<models.OfferModel>;

}

export type StayOffersModelWithRawHttp = StayOffersModel & ResponseModel<StayOffersModel>;

export namespace StayOffersModel {
    export const $metaData = { 
        property: Object.freeze({ 
            type: 'models.EmbeddedPropertyModel',
        } as IApaleoPropertyMetaData),
        arrival: Object.freeze({ 
            type: 'Date',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
        departure: Object.freeze({ 
            type: 'Date',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
        offers: Object.freeze({ 
            type: 'Array<models.OfferModel>',
            isListContainer: true,
        } as IApaleoPropertyMetaData),
    };

    export function $buildForm(fb: FormBuilder, options?: IBuildFormOptions<StayOffersModel>): FormGroup {
        const defaultControls = { 
            property: models.EmbeddedPropertyModel.$buildForm(fb),
            arrival: getControl($metaData.arrival, options, 'arrival'),
            departure: getControl($metaData.departure, options, 'departure'),
        };
        const group = fb.group(adjustDefaultControls(defaultControls, options));
        setMetaData(group, $metaData);

        return group;
    }
}

