/**
 * Apaleo Inventory API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

import { Validators, FormBuilder, ValidatorFn, FormGroup }          from '@angular/forms';
import { ValidatorsFactory, ControlFactory, Control }               from '../../types';
import { IApaleoAbstractControl, IApaleoControlMetaData, Optional } from '../../types';
import { ResponseModel }                                            from '../../models';

export interface PropertyListModel {
    /**
     * List of properties
     */
    properties?: Array<models.PropertyModel>;

}

export type PropertyListModelWithRawHttp = PropertyListModel & ResponseModel<PropertyListModel>;

export interface PropertyListModel$Form<T> {
    properties: T;
}

export interface PropertyListModel$ValidatorFactories extends PropertyListModel$Form<ValidatorsFactory> {}
export interface PropertyListModel$ControlFactories extends PropertyListModel$Form<ControlFactory> {}
export interface PropertyListModel$Control extends PropertyListModel$Form<Control | FormGroup> {}
export interface PropertyListModel$ControlMetaData extends PropertyListModel$Form<IApaleoControlMetaData> {}

const $validators: PropertyListModel$ValidatorFactories = {
    properties: (() => [
        
        
        
    ]),
}

const $controls: PropertyListModel$ControlFactories = {
    properties: (() => [null, Validators.compose($validators.properties())]),
}

const $metaData: PropertyListModel$ControlMetaData = {
    properties: {
        
    },
}

export const PropertyListModel = {
    $validators: $validators,
    $controls: $controls,
    $metaData: $metaData,
    $buildForm: ((fb: FormBuilder, specificControls?: Optional<PropertyListModel$Control>, additionalControls?: { [name: string]: (Control | FormGroup) }) => {
        const defaultControls = {
        };

        const group = fb.group(Object.assign(defaultControls, specificControls, additionalControls));

    

        return group;
    })
}

