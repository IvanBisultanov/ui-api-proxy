/**
 * Apaleo Bookings API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

/**
 * With this request you can setup a new account with an admin user
 */
import { Validators, FormBuilder, ValidatorFn, FormGroup }          from '@angular/forms';
import { ValidatorsFactory, ControlFactory, Control }               from '../../types';
import { IApaleoAbstractControl, IApaleoControlMetaData, Optional } from '../../types';
import { ResponseModel }                                            from '../../models';

export interface ReservationModel {
    id?: number;

    /**
     * The PropertyId for the reservation
     */
    propertyId?: number;

    checkInTime?: string;

    checkOutTime?: string;

    adults?: number;

    children?: number;

    guestTitle?: string;

    firstName?: string;

    middleInitial?: string;

    lastName?: string;

    email?: string;

    phone?: string;

    street?: string;

    number?: string;

    city?: string;

    zipCode?: string;

    countryCode?: string;

    ratePlanId?: number;

}

export type ReservationModelWithRawHttp = ReservationModel & ResponseModel<ReservationModel>;

export interface ReservationModel$Form<T> {
    id: T;
    propertyId: T;
    checkInTime: T;
    checkOutTime: T;
    adults: T;
    children: T;
    guestTitle: T;
    firstName: T;
    middleInitial: T;
    lastName: T;
    email: T;
    phone: T;
    street: T;
    number: T;
    city: T;
    zipCode: T;
    countryCode: T;
    ratePlanId: T;
}

export interface ReservationModel$ValidatorFactories extends ReservationModel$Form<ValidatorsFactory> {}
export interface ReservationModel$ControlFactories extends ReservationModel$Form<ControlFactory> {}
export interface ReservationModel$Control extends ReservationModel$Form<Control | FormGroup> {}
export interface ReservationModel$ControlMetaData extends ReservationModel$Form<IApaleoControlMetaData> {}

export namespace ReservationModel {
    export const $validators: ReservationModel$ValidatorFactories = {
        id: (() => [
            
            
            
        ]),
        propertyId: (() => [
            
            
            
        ]),
        checkInTime: (() => [
            
            
            
        ]),
        checkOutTime: (() => [
            
            
            
        ]),
        adults: (() => [
            
            
            
        ]),
        children: (() => [
            
            
            
        ]),
        guestTitle: (() => [
            
            
            
        ]),
        firstName: (() => [
            
            
            
        ]),
        middleInitial: (() => [
            
            
            
        ]),
        lastName: (() => [
            
            
            
        ]),
        email: (() => [
            
            
            
        ]),
        phone: (() => [
            
            
            
        ]),
        street: (() => [
            
            
            
        ]),
        number: (() => [
            
            
            
        ]),
        city: (() => [
            
            
            
        ]),
        zipCode: (() => [
            
            
            
        ]),
        countryCode: (() => [
            
            
            
        ]),
        ratePlanId: (() => [
            
            
            
        ]),
    };

    export const $controls: ReservationModel$ControlFactories = {
        id: (() => [null, Validators.compose($validators.id())]),
        propertyId: (() => [null, Validators.compose($validators.propertyId())]),
        checkInTime: (() => [null, Validators.compose($validators.checkInTime())]),
        checkOutTime: (() => [null, Validators.compose($validators.checkOutTime())]),
        adults: (() => [null, Validators.compose($validators.adults())]),
        children: (() => [null, Validators.compose($validators.children())]),
        guestTitle: (() => [null, Validators.compose($validators.guestTitle())]),
        firstName: (() => [null, Validators.compose($validators.firstName())]),
        middleInitial: (() => [null, Validators.compose($validators.middleInitial())]),
        lastName: (() => [null, Validators.compose($validators.lastName())]),
        email: (() => [null, Validators.compose($validators.email())]),
        phone: (() => [null, Validators.compose($validators.phone())]),
        street: (() => [null, Validators.compose($validators.street())]),
        number: (() => [null, Validators.compose($validators.number())]),
        city: (() => [null, Validators.compose($validators.city())]),
        zipCode: (() => [null, Validators.compose($validators.zipCode())]),
        countryCode: (() => [null, Validators.compose($validators.countryCode())]),
        ratePlanId: (() => [null, Validators.compose($validators.ratePlanId())]),
    };

    export const $metaData: ReservationModel$ControlMetaData = {
        id: {
            
            
            type: 'number',
            
        },
        propertyId: {
            
            
            type: 'number',
            
        },
        checkInTime: {
            
            
            type: 'string',
            
        },
        checkOutTime: {
            
            
            type: 'string',
            
        },
        adults: {
            
            
            type: 'number',
            
        },
        children: {
            
            
            type: 'number',
            
        },
        guestTitle: {
            
            
            type: 'string',
            
        },
        firstName: {
            
            
            type: 'string',
            
        },
        middleInitial: {
            
            
            type: 'string',
            
        },
        lastName: {
            
            
            type: 'string',
            
        },
        email: {
            
            
            type: 'string',
            
        },
        phone: {
            
            
            type: 'string',
            
        },
        street: {
            
            
            type: 'string',
            
        },
        number: {
            
            
            type: 'string',
            
        },
        city: {
            
            
            type: 'string',
            
        },
        zipCode: {
            
            
            type: 'string',
            
        },
        countryCode: {
            
            
            type: 'string',
            
        },
        ratePlanId: {
            
            
            type: 'number',
            
        },
    };

    export function $buildForm(fb: FormBuilder, specificControls?: Optional<ReservationModel$Control>, additionalControls?: { [name: string]: (Control | FormGroup) }) {
        const defaultControls = {
            id: $controls.id(),
            propertyId: $controls.propertyId(),
            checkInTime: $controls.checkInTime(),
            checkOutTime: $controls.checkOutTime(),
            adults: $controls.adults(),
            children: $controls.children(),
            guestTitle: $controls.guestTitle(),
            firstName: $controls.firstName(),
            middleInitial: $controls.middleInitial(),
            lastName: $controls.lastName(),
            email: $controls.email(),
            phone: $controls.phone(),
            street: $controls.street(),
            number: $controls.number(),
            city: $controls.city(),
            zipCode: $controls.zipCode(),
            countryCode: $controls.countryCode(),
            ratePlanId: $controls.ratePlanId(),
        };

        const group = fb.group(Object.assign(defaultControls, specificControls, additionalControls));

    
        const idCtrl: IApaleoAbstractControl = <any>group.controls['id'];
        idCtrl.apaleoMetaData = $metaData.id;
    
    
        const propertyIdCtrl: IApaleoAbstractControl = <any>group.controls['propertyId'];
        propertyIdCtrl.apaleoMetaData = $metaData.propertyId;
    
    
        const checkInTimeCtrl: IApaleoAbstractControl = <any>group.controls['checkInTime'];
        checkInTimeCtrl.apaleoMetaData = $metaData.checkInTime;
    
    
        const checkOutTimeCtrl: IApaleoAbstractControl = <any>group.controls['checkOutTime'];
        checkOutTimeCtrl.apaleoMetaData = $metaData.checkOutTime;
    
    
        const adultsCtrl: IApaleoAbstractControl = <any>group.controls['adults'];
        adultsCtrl.apaleoMetaData = $metaData.adults;
    
    
        const childrenCtrl: IApaleoAbstractControl = <any>group.controls['children'];
        childrenCtrl.apaleoMetaData = $metaData.children;
    
    
        const guestTitleCtrl: IApaleoAbstractControl = <any>group.controls['guestTitle'];
        guestTitleCtrl.apaleoMetaData = $metaData.guestTitle;
    
    
        const firstNameCtrl: IApaleoAbstractControl = <any>group.controls['firstName'];
        firstNameCtrl.apaleoMetaData = $metaData.firstName;
    
    
        const middleInitialCtrl: IApaleoAbstractControl = <any>group.controls['middleInitial'];
        middleInitialCtrl.apaleoMetaData = $metaData.middleInitial;
    
    
        const lastNameCtrl: IApaleoAbstractControl = <any>group.controls['lastName'];
        lastNameCtrl.apaleoMetaData = $metaData.lastName;
    
    
        const emailCtrl: IApaleoAbstractControl = <any>group.controls['email'];
        emailCtrl.apaleoMetaData = $metaData.email;
    
    
        const phoneCtrl: IApaleoAbstractControl = <any>group.controls['phone'];
        phoneCtrl.apaleoMetaData = $metaData.phone;
    
    
        const streetCtrl: IApaleoAbstractControl = <any>group.controls['street'];
        streetCtrl.apaleoMetaData = $metaData.street;
    
    
        const numberCtrl: IApaleoAbstractControl = <any>group.controls['number'];
        numberCtrl.apaleoMetaData = $metaData.number;
    
    
        const cityCtrl: IApaleoAbstractControl = <any>group.controls['city'];
        cityCtrl.apaleoMetaData = $metaData.city;
    
    
        const zipCodeCtrl: IApaleoAbstractControl = <any>group.controls['zipCode'];
        zipCodeCtrl.apaleoMetaData = $metaData.zipCode;
    
    
        const countryCodeCtrl: IApaleoAbstractControl = <any>group.controls['countryCode'];
        countryCodeCtrl.apaleoMetaData = $metaData.countryCode;
    
    
        const ratePlanIdCtrl: IApaleoAbstractControl = <any>group.controls['ratePlanId'];
        ratePlanIdCtrl.apaleoMetaData = $metaData.ratePlanId;
    

        return group;
    }
}

