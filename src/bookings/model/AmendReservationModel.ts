/**
 * Apaleo Bookings API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

/**
 * With this request you can modify a reservation
 */
import { FormBuilder, FormGroup }                              from '@angular/forms';
import { IBuildFormOptions, IApaleoPropertyMetaData }          from '../../types';
import { ResponseModel }                                       from '../../models';
import { getControl, adjustDefaultControls, prepareFormGroup } from '../../functions.model';

export interface AmendReservationModel {
    /**
     * ID of the rateplan
     */
    rateplanId?: string;

    /**
     * ID of the unit type
     */
    unitTypeId?: string;

    /**
     * Date of arrival
     */
    arrival?: Date;

    /**
     * Date of departure
     */
    departure?: Date;

    /**
     * Number of adults
     */
    adults?: number;

    /**
     * Number of children
     */
    children?: number;

}

export type AmendReservationModelWithRawHttp = AmendReservationModel & ResponseModel<AmendReservationModel>;

export namespace AmendReservationModel {
    export const $metaData = { 
        rateplanId: Object.freeze({ 
            type: 'string',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
        unitTypeId: Object.freeze({ 
            type: 'string',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
        arrival: Object.freeze({ 
            type: 'Date',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
        departure: Object.freeze({ 
            type: 'Date',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
        adults: Object.freeze({ 
            type: 'number',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
        children: Object.freeze({ 
            type: 'number',
            isPrimitiveType: true,
        } as IApaleoPropertyMetaData),
    };

    export function $buildForm(fb: FormBuilder, options?: IBuildFormOptions<AmendReservationModel>): FormGroup {
        const defaultControls = { 
            rateplanId: getControl($metaData.rateplanId, options, 'rateplanId'),
            unitTypeId: getControl($metaData.unitTypeId, options, 'unitTypeId'),
            arrival: getControl($metaData.arrival, options, 'arrival'),
            departure: getControl($metaData.departure, options, 'departure'),
            adults: getControl($metaData.adults, options, 'adults'),
            children: getControl($metaData.children, options, 'children'),
        };
        const group = fb.group(adjustDefaultControls(defaultControls, options));
        prepareFormGroup(group, $metaData, options);

        return group;
    }
}

