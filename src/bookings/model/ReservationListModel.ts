/**
 * Apaleo Bookings API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

import { Validators, FormBuilder, ValidatorFn, FormGroup }          from '@angular/forms';
import { ValidatorsFactory, ControlFactory, Control }               from '../../types';
import { IApaleoAbstractControl, IApaleoControlMetaData, Optional } from '../../types';
import { ResponseModel }                                            from '../../models';

export interface ReservationListModel {
    /**
     * List of reservations
     */
    reservations?: Array<models.ReservationModel>;

}

export type ReservationListModelWithRawHttp = ReservationListModel & ResponseModel<ReservationListModel>;

export interface ReservationListModel$Form<T> {
    reservations: T;
}

export interface ReservationListModel$ValidatorFactories extends ReservationListModel$Form<ValidatorsFactory> {}
export interface ReservationListModel$ControlFactories extends ReservationListModel$Form<ControlFactory> {}
export interface ReservationListModel$Control extends ReservationListModel$Form<Control | FormGroup> {}
export interface ReservationListModel$ControlMetaData extends ReservationListModel$Form<IApaleoControlMetaData> {}

export namespace ReservationListModel {
    export const $validators: ReservationListModel$ValidatorFactories = {
        reservations: (() => [
            
            
            
        ]),
    };

    export const $controls: ReservationListModel$ControlFactories = {
        reservations: (() => [null, Validators.compose($validators.reservations())]),
    };

    export const $metaData: ReservationListModel$ControlMetaData = {
        reservations: {
            
        },
    };

    export function $buildForm(fb: FormBuilder, specificControls?: Optional<ReservationListModel$Control>, additionalControls?: { [name: string]: (Control | FormGroup) }) {
        const defaultControls = {
        };

        const group = fb.group(Object.assign(defaultControls, specificControls, additionalControls));

    

        return group;
    }
}

